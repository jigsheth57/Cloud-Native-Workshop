spring:
  profiles:
    active: local
  jpa:
    hibernate:
      ddl-auto: none
  rabbitmq:
    host: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.host:localhost}
    port: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.port:5672}
    username: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.username:guest}
    password: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.password:guest}
    virtualHost: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.vhost:/}
logging:
  level:
    io.pivotal.demo: DEBUG
    org.hibernate.SQL: DEBUG
info:
  component: Contact Data Service
  build:
    name: ${project.name:contactDataService}
    description: ${project.description:Event-Driven Contact Data Service using Spring JPA, REST, AMQP}
    version: ${project.version:0.0.1-SNAPSHOT}
    group: ${project.groupId:io.pivotal.demo}
    artifact: ${project.artifactId:contactDataService}

eureka:
  instance:
    statusPageUrlPath: /info
    healthCheckUrlPath: /health
    homePageUrlPath: /
    registryFetchIntervalSeconds: 5
    leaseRenewalIntervalInSeconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true

---
spring:
  profiles: local
  datasource:
    platform: h2
  
---
spring:
  profiles: cloud
  datasource:
    platform: mysql 
    cloud:
  services:
    registrationMethod: route
eureka:
  instance:
    securePortEnabled: true
    nonSecurePortEnabled: false
    secureVirtualHostName: ${spring.application.name}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
    client:
    serviceUrl:
      defaultZone: ${vcap.services.p-service-registry.credentials.uri}/eureka/